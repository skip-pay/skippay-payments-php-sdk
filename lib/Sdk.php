<?php

/**
 * 
 *
 * Skip Pay API for partners
 *
 * API documentation for Skip Pay partners.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@skippay.cz
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0

 *
 * @category Class
 * @package  SkipPay
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace SkipPay;

use SkipPay\Api as A;
use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use SkipPay\Configuration;
use SkipPay\HeaderSelector;

class Sdk
{
  
  
  /**
    * @var _ApplicationOperationsApi
    */
  protected $_ApplicationOperationsApi = null;
  
  /**
    * @var _HealthCheckApi
    */
  protected $_HealthCheckApi = null;
  
  /**
    * @var _PrecheckOperationsApi
    */
  protected $_PrecheckOperationsApi = null;
  
  /**
    * @var _SecurityApi
    */
  protected $_SecurityApi = null;
  

  /**
    * @var ClientInterface
    */
  protected $client;

  /**
    * @var Configuration
    */
  protected $config;

  /**
    * @var HeaderSelector
    */
  protected $headerSelector;

  /**
    * @var int Host index
    */
  protected $hostIndex;

  /**
    * @param ClientInterface|null $client
    * @param Configuration|null   $config
    * @param HeaderSelector|null  $selector
    * @param int                  $hostIndex (Optional) host index to select the list of hosts if defined in the spec.
    */
  public function __construct(
      ClientInterface $client = null,
      Configuration $config = null,
      HeaderSelector $selector = null,
      $hostIndex = 0
  ) {
      $this->client = $client ?: new Client();
      $this->config = $config ?: new Configuration();
      $this->headerSelector = $selector ?: new HeaderSelector();
      $this->hostIndex = $hostIndex;
  }

  
  public function ApplicationOperationsApi(): A\ApplicationOperationsApi {
    if (null === $this->_ApplicationOperationsApi) {
        $this->_ApplicationOperationsApi = new A\ApplicationOperationsApi(
          $this->client,
          $this->config,
        );
    }

    return $this->_ApplicationOperationsApi;
  }
  
  public function HealthCheckApi(): A\HealthCheckApi {
    if (null === $this->_HealthCheckApi) {
        $this->_HealthCheckApi = new A\HealthCheckApi(
          $this->client,
          $this->config,
        );
    }

    return $this->_HealthCheckApi;
  }
  
  public function PrecheckOperationsApi(): A\PrecheckOperationsApi {
    if (null === $this->_PrecheckOperationsApi) {
        $this->_PrecheckOperationsApi = new A\PrecheckOperationsApi(
          $this->client,
          $this->config,
        );
    }

    return $this->_PrecheckOperationsApi;
  }
  
  public function SecurityApi(): A\SecurityApi {
    if (null === $this->_SecurityApi) {
        $this->_SecurityApi = new A\SecurityApi(
          $this->client,
          $this->config,
        );
    }

    return $this->_SecurityApi;
  }
  
}